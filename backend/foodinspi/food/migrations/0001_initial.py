# Generated by Django 4.0.6 on 2022-08-14 20:39

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Ingredient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('energy_kj', models.FloatField(default=0)),
                ('protein_g', models.FloatField(default=0)),
                ('fat_g', models.FloatField(default=0)),
                ('saturated_fatty_acids_g', models.FloatField(default=0)),
                ('sugar_g', models.FloatField(default=0)),
                ('sodium_mg', models.FloatField(default=0)),
                ('fruit_factor', models.FloatField(blank=True, default=0)),
                ('carbohydrate_g', models.FloatField(default=0)),
                ('fibre_g', models.FloatField(default=0)),
                ('name', models.CharField(blank=True, max_length=255)),
                ('description', models.CharField(blank=True, max_length=255)),
                ('physical_density', models.FloatField(default=1)),
                ('physical_viscosity', models.CharField(choices=[('solid', 'Essen'), ('beverage', 'Getr√§nk')], default='solid', max_length=10)),
                ('fdc_id', models.IntegerField(blank=True, null=True)),
                ('nutri_points', models.IntegerField(blank=True, null=True)),
                ('nutri_class', models.FloatField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MeasuringUnit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('name', models.CharField(blank=True, max_length=255)),
                ('description', models.CharField(blank=True, max_length=255)),
                ('quantity', models.FloatField()),
                ('unit', models.CharField(choices=[('ml', 'Millilitter'), ('g', 'Gramm')], default='g', max_length=2)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Package',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('name', models.CharField(blank=True, max_length=255)),
                ('quantity', models.FloatField(default=1)),
                ('weight_package_g', models.FloatField(blank=True, default=0)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Portion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('energy_kj', models.FloatField(default=0)),
                ('protein_g', models.FloatField(default=0)),
                ('fat_g', models.FloatField(default=0)),
                ('saturated_fatty_acids_g', models.FloatField(default=0)),
                ('sugar_g', models.FloatField(default=0)),
                ('sodium_mg', models.FloatField(default=0)),
                ('fruit_factor', models.FloatField(blank=True, default=0)),
                ('carbohydrate_g', models.FloatField(default=0)),
                ('fibre_g', models.FloatField(default=0)),
                ('name', models.CharField(blank=True, max_length=255)),
                ('quantity', models.FloatField()),
                ('rank', models.IntegerField(default=1)),
                ('weight_g', models.FloatField(blank=True, null=True)),
                ('ingredient', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='food.ingredient')),
                ('measuring_unit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='food.measuringunit')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Recipe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('energy_kj', models.FloatField(default=0)),
                ('protein_g', models.FloatField(default=0)),
                ('fat_g', models.FloatField(default=0)),
                ('saturated_fatty_acids_g', models.FloatField(default=0)),
                ('sugar_g', models.FloatField(default=0)),
                ('sodium_mg', models.FloatField(default=0)),
                ('fruit_factor', models.FloatField(blank=True, default=0)),
                ('carbohydrate_g', models.FloatField(default=0)),
                ('fibre_g', models.FloatField(default=0)),
                ('name', models.CharField(blank=True, max_length=255)),
                ('description', models.CharField(blank=True, max_length=255)),
                ('nutri_class', models.FloatField(blank=True, null=True)),
                ('nutri_points', models.FloatField(blank=True, null=True)),
                ('weight_g', models.FloatField(default=1)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Retailer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('name', models.CharField(blank=True, max_length=255)),
                ('description', models.CharField(blank=True, max_length=255)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TagCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('name', models.CharField(blank=True, max_length=255)),
                ('description', models.CharField(blank=True, max_length=255)),
                ('is_ingredient', models.BooleanField(default=True)),
                ('is_recipe', models.BooleanField(default=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('name', models.CharField(blank=True, max_length=255)),
                ('description', models.CharField(blank=True, max_length=255)),
                ('is_ingredient', models.BooleanField(default=True)),
                ('is_recipe', models.BooleanField(default=True)),
                ('tag_category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='food.tagcategory')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RecipeItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('energy_kj', models.FloatField(default=0)),
                ('protein_g', models.FloatField(default=0)),
                ('fat_g', models.FloatField(default=0)),
                ('saturated_fatty_acids_g', models.FloatField(default=0)),
                ('sugar_g', models.FloatField(default=0)),
                ('sodium_mg', models.FloatField(default=0)),
                ('fruit_factor', models.FloatField(blank=True, default=0)),
                ('carbohydrate_g', models.FloatField(default=0)),
                ('fibre_g', models.FloatField(default=0)),
                ('quantity', models.FloatField(default=1)),
                ('weight_g', models.FloatField(blank=True, null=True)),
                ('weight_recipe_factor', models.FloatField(blank=True, null=True)),
                ('nutri_points', models.FloatField(blank=True, null=True)),
                ('nutri_class', models.FloatField(blank=True, null=True)),
                ('portion', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='food.portion')),
                ('recipe', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='food.recipe')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Price',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('price_eur', models.FloatField()),
                ('price_per_kg', models.FloatField(default=1)),
                ('package', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='food.package')),
                ('retailer', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.PROTECT, to='food.retailer')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='package',
            name='portion',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='food.portion'),
        ),
        migrations.AddField(
            model_name='ingredient',
            name='tags',
            field=models.ManyToManyField(blank=True, related_name='tags', to='food.tag'),
        ),
    ]
